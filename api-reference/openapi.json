{
    "openapi": "3.1.0",
    "info": {
        "title": "Dev Kit for AI API",
        "description": "API for Dev Kit for AI: Developer Toolkit for AI-Powered Web Applications",
        "version": "1.1.0"
    },
    "servers": [
        {
            "url": "https://api.devkit4ai.com",
            "description": "DevKit4AI Production Server"
        },
        {
            "url": "https://api.vibecoding.ad",
            "description": "VibeCoding Production Server"
        }
    ],
    "paths": {
        "/api/v1/health": {
            "get": {
                "tags": [
                    "Health Check API"
                ],
                "summary": "Health Check",
                "description": "Comprehensive health check for all system components",
                "operationId": "health_check_api_v1_health_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HealthCheckResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/health/database": {
            "get": {
                "tags": [
                    "Health Check API"
                ],
                "summary": "Database Health Check",
                "description": "Detailed health check for database connectivity",
                "operationId": "database_health_check_api_v1_health_database_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DatabaseHealthResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/health/storage": {
            "get": {
                "tags": [
                    "Health Check API"
                ],
                "summary": "Storage Health Check",
                "description": "Detailed health check for file storage system",
                "operationId": "storage_health_check_api_v1_health_storage_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageHealthResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/health/redis": {
            "get": {
                "tags": [
                    "Health Check API"
                ],
                "summary": "Redis Health Check",
                "description": "Detailed health check for Redis PubSub system",
                "operationId": "redis_health_check_api_v1_health_redis_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RedisHealthResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/health/detailed": {
            "get": {
                "tags": [
                    "Health Check API"
                ],
                "summary": "Detailed Health Check",
                "description": "Detailed health check with additional system information",
                "operationId": "detailed_health_check_api_v1_health_detailed_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DetailedHealthCheckResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register",
                "operationId": "register_api_v1_auth_register_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCreateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegistrationResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login",
                "operationId": "login_api_v1_auth_login_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserLoginRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Read Users Me",
                "operationId": "read_users_me_api_v1_auth_me_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/v1/auth/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh Token",
                "operationId": "refresh_token_api_v1_auth_refresh_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RefreshRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/verify-email": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify Email",
                "operationId": "verify_email_api_v1_auth_verify_email_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VerifyEmailRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/request-verification": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Request Verification",
                "operationId": "request_verification_api_v1_auth_request_verification_post",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "User Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/projects/": {
            "get": {
                "tags": [
                    "Project Management"
                ],
                "summary": "List Projects",
                "description": "List all projects for the current user",
                "operationId": "list_projects_api_v1_projects__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ProjectResponse"
                                    },
                                    "type": "array",
                                    "title": "Response List Projects Api V1 Projects  Get"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Project Management"
                ],
                "summary": "Create Project",
                "description": "Create a new project for the current user",
                "operationId": "create_project_api_v1_projects__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectCreateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectCreatedResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/v1/projects/{project_id}": {
            "get": {
                "tags": [
                    "Project Management"
                ],
                "summary": "Get Project",
                "description": "Get details of a specific project",
                "operationId": "get_project_api_v1_projects__project_id__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Project Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Project Management"
                ],
                "summary": "Delete Project",
                "description": "Delete a project",
                "operationId": "delete_project_api_v1_projects__project_id__delete",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Project Id"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/projects/{project_id}/api-keys": {
            "post": {
                "tags": [
                    "Project Management"
                ],
                "summary": "Create Api Key",
                "description": "Create a new API key for a project. Requires project ownership.",
                "operationId": "create_api_key_api_v1_projects__project_id__api_keys_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Project Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiKeyCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiKeyCreatedResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Project Management"
                ],
                "summary": "List Api Keys",
                "description": "List all API keys for a project",
                "operationId": "list_api_keys_api_v1_projects__project_id__api_keys_get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Project Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ApiKeyResponse"
                                    },
                                    "title": "Response List Api Keys Api V1 Projects  Project Id  Api Keys Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/projects/{project_id}/api-keys/{api_key_id}": {
            "delete": {
                "tags": [
                    "Project Management"
                ],
                "summary": "Revoke Api Key",
                "description": "Revoke an API key",
                "operationId": "revoke_api_key_api_v1_projects__project_id__api_keys__api_key_id__delete",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Project Id"
                        }
                    },
                    {
                        "name": "api_key_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Api Key Id"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/generation/generate-v2": {
            "post": {
                "tags": [
                    "AI Generation API"
                ],
                "summary": "Create Generation V2",
                "operationId": "create_generation_v2_api_v1_generation_generate_v2_post",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_create_generation_v2_api_v1_generation_generate_v2_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenerationCreateResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/generation/generations-v2/{generation_id}/status": {
            "get": {
                "tags": [
                    "AI Generation API"
                ],
                "summary": "Get Generation Status V2",
                "operationId": "get_generation_status_v2_api_v1_generation_generations_v2__generation_id__status_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "generation_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Generation Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenerationStatusResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/generation/generations-v2": {
            "get": {
                "tags": [
                    "AI Generation API"
                ],
                "summary": "Get User Generations V2",
                "operationId": "get_user_generations_v2_api_v1_generation_generations_v2_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "title": "Page"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20,
                            "title": "Per Page"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenerationListResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/generation/generations-v2/{generation_id}/public": {
            "patch": {
                "tags": [
                    "AI Generation API"
                ],
                "summary": "Toggle Generation Public V2",
                "operationId": "toggle_generation_public_v2_api_v1_generation_generations_v2__generation_id__public_patch",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "generation_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Generation Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_toggle_generation_public_v2_api_v1_generation_generations_v2__generation_id__public_patch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/generation/generations-v2/{generation_id}": {
            "delete": {
                "tags": [
                    "AI Generation API"
                ],
                "summary": "Delete Generation V2",
                "operationId": "delete_generation_v2_api_v1_generation_generations_v2__generation_id__delete",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "generation_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Generation Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/generation/public-generations-v2": {
            "get": {
                "tags": [
                    "AI Generation API"
                ],
                "summary": "Get Public Generations V2",
                "operationId": "get_public_generations_v2_api_v1_generation_public_generations_v2_get",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "title": "Page"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20,
                            "title": "Per Page"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenerationListResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/generation/generate-anonymous-v2": {
            "post": {
                "tags": [
                    "AI Generation API"
                ],
                "summary": "Create Anonymous Generation V2",
                "operationId": "create_anonymous_generation_v2_api_v1_generation_generate_anonymous_v2_post",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_create_anonymous_generation_v2_api_v1_generation_generate_anonymous_v2_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenerationCreateResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/generation/anonymous-generations-v2/{generation_id}/status": {
            "get": {
                "tags": [
                    "AI Generation API"
                ],
                "summary": "Get Anonymous Generation Status V2",
                "operationId": "get_anonymous_generation_status_v2_api_v1_generation_anonymous_generations_v2__generation_id__status_get",
                "parameters": [
                    {
                        "name": "generation_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Generation Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenerationStatusResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/": {
            "get": {
                "tags": [
                    "Default"
                ],
                "summary": "Root",
                "description": "Root endpoint providing basic API information",
                "operationId": "root__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "tags": [
                    "Default"
                ],
                "summary": "Health Check",
                "description": "Basic health check endpoint - delegates to comprehensive health check\nFor backward compatibility, this provides a simple health status",
                "operationId": "health_check_health_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ApiKeyCreateRequest": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 255
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    }
                },
                "type": "object",
                "title": "ApiKeyCreateRequest"
            },
            "ApiKeyCreatedResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "key": {
                        "type": "string",
                        "title": "Key"
                    },
                    "key_prefix": {
                        "type": "string",
                        "title": "Key Prefix"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "key",
                    "key_prefix",
                    "is_active",
                    "created_at"
                ],
                "title": "ApiKeyCreatedResponse"
            },
            "ApiKeyResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "key_prefix": {
                        "type": "string",
                        "title": "Key Prefix"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active"
                    },
                    "last_used_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Used At"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "key_prefix",
                    "is_active",
                    "last_used_at",
                    "created_at"
                ],
                "title": "ApiKeyResponse"
            },
            "Body_create_anonymous_generation_v2_api_v1_generation_generate_anonymous_v2_post": {
                "properties": {
                    "instructions": {
                        "type": "string",
                        "title": "Instructions"
                    },
                    "files": {
                        "items": {
                            "type": "string",
                            "format": "binary"
                        },
                        "type": "array",
                        "title": "Files"
                    }
                },
                "type": "object",
                "required": [
                    "instructions",
                    "files"
                ],
                "title": "Body_create_anonymous_generation_v2_api_v1_generation_generate_anonymous_v2_post"
            },
            "Body_create_generation_v2_api_v1_generation_generate_v2_post": {
                "properties": {
                    "instructions": {
                        "type": "string",
                        "title": "Instructions"
                    },
                    "files": {
                        "items": {
                            "type": "string",
                            "format": "binary"
                        },
                        "type": "array",
                        "title": "Files"
                    }
                },
                "type": "object",
                "required": [
                    "instructions",
                    "files"
                ],
                "title": "Body_create_generation_v2_api_v1_generation_generate_v2_post"
            },
            "Body_toggle_generation_public_v2_api_v1_generation_generations_v2__generation_id__public_patch": {
                "properties": {
                    "is_public": {
                        "type": "boolean",
                        "title": "Is Public"
                    }
                },
                "type": "object",
                "required": [
                    "is_public"
                ],
                "title": "Body_toggle_generation_public_v2_api_v1_generation_generations_v2__generation_id__public_patch"
            },
            "DatabaseHealthResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "version": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Version"
                    },
                    "connection": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Connection"
                    },
                    "error": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Error"
                    },
                    "timestamp": {
                        "type": "string",
                        "title": "Timestamp"
                    }
                },
                "type": "object",
                "required": [
                    "status",
                    "timestamp"
                ],
                "title": "DatabaseHealthResponse"
            },
            "DetailedHealthCheckResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "database": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Database"
                    },
                    "file_storage": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "File Storage"
                    },
                    "redis": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Redis"
                    },
                    "system": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "System"
                    },
                    "timestamp": {
                        "type": "string",
                        "title": "Timestamp"
                    },
                    "version": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Version"
                    }
                },
                "type": "object",
                "required": [
                    "status",
                    "database",
                    "file_storage",
                    "redis",
                    "system",
                    "timestamp"
                ],
                "title": "DetailedHealthCheckResponse"
            },
            "GenerationCreateResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message",
                        "default": "Generation request submitted successfully"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ],
                "title": "GenerationCreateResponse"
            },
            "GenerationListResponse": {
                "properties": {
                    "generations": {
                        "items": {
                            "$ref": "#/components/schemas/GenerationResponse"
                        },
                        "type": "array",
                        "title": "Generations"
                    },
                    "total": {
                        "type": "integer",
                        "minimum": 0.0,
                        "title": "Total"
                    },
                    "page": {
                        "type": "integer",
                        "minimum": 1.0,
                        "title": "Page"
                    },
                    "per_page": {
                        "type": "integer",
                        "maximum": 100.0,
                        "minimum": 1.0,
                        "title": "Per Page"
                    }
                },
                "type": "object",
                "required": [
                    "generations",
                    "total",
                    "page",
                    "per_page"
                ],
                "title": "GenerationListResponse"
            },
            "GenerationResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "instructions": {
                        "type": "string",
                        "title": "Instructions"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "generated_image_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Generated Image Url"
                    },
                    "is_public": {
                        "type": "boolean",
                        "title": "Is Public"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Updated At"
                    },
                    "example_images": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Example Images",
                        "default": []
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "instructions",
                    "status",
                    "is_public",
                    "created_at"
                ],
                "title": "GenerationResponse"
            },
            "GenerationStatusResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "description": "Generation status: pending, processing, completed, failed"
                    },
                    "generated_image_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Generated Image Url"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "status"
                ],
                "title": "GenerationStatusResponse"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "HealthCheckResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "database": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Database"
                    },
                    "file_storage": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "File Storage"
                    },
                    "redis": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Redis"
                    },
                    "timestamp": {
                        "type": "string",
                        "title": "Timestamp"
                    },
                    "version": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Version"
                    },
                    "note": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Note"
                    },
                    "error": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Error"
                    }
                },
                "type": "object",
                "required": [
                    "status",
                    "database",
                    "file_storage",
                    "redis",
                    "timestamp"
                ],
                "title": "HealthCheckResponse"
            },
            "ProjectCreateRequest": {
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 1000
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "ProjectCreateRequest"
            },
            "ProjectCreatedResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ],
                "title": "ProjectCreatedResponse"
            },
            "ProjectResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "description",
                    "is_active",
                    "created_at",
                    "updated_at"
                ],
                "title": "ProjectResponse"
            },
            "ProvisioningData": {
                "properties": {
                    "project_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Project Id"
                    },
                    "api_key": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Api Key"
                    },
                    "developer_key": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Developer Key"
                    }
                },
                "type": "object",
                "title": "ProvisioningData",
                "description": "Provisioning data for developers (one-time response)"
            },
            "RedisHealthResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "type": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Type"
                    },
                    "listening": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Listening"
                    },
                    "subscribers": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Subscribers"
                    },
                    "connection_failed": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Connection Failed"
                    },
                    "last_connection_attempt": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Connection Attempt"
                    },
                    "error": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Error"
                    },
                    "timestamp": {
                        "type": "string",
                        "title": "Timestamp"
                    }
                },
                "type": "object",
                "required": [
                    "status",
                    "timestamp"
                ],
                "title": "RedisHealthResponse"
            },
            "RefreshRequest": {
                "properties": {
                    "refresh_token": {
                        "type": "string",
                        "title": "Refresh Token"
                    }
                },
                "type": "object",
                "required": [
                    "refresh_token"
                ],
                "title": "RefreshRequest"
            },
            "RegistrationResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "role": {
                        "type": "string",
                        "title": "Role"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "provisioning": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ProvisioningData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "email",
                    "role",
                    "is_active",
                    "created_at"
                ],
                "title": "RegistrationResponse",
                "description": "Enhanced registration response with role and provisioning data"
            },
            "StorageHealthResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "type": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Type"
                    },
                    "path": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Path"
                    },
                    "url_prefix": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Url Prefix"
                    },
                    "url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Url"
                    },
                    "writable": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Writable"
                    },
                    "accessible": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Accessible"
                    },
                    "url_configured": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Url Configured"
                    },
                    "key_configured": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Key Configured"
                    },
                    "error": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Error"
                    },
                    "timestamp": {
                        "type": "string",
                        "title": "Timestamp"
                    }
                },
                "type": "object",
                "required": [
                    "status",
                    "timestamp"
                ],
                "title": "StorageHealthResponse"
            },
            "TokenResponse": {
                "properties": {
                    "access_token": {
                        "type": "string",
                        "title": "Access Token"
                    },
                    "refresh_token": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Refresh Token"
                    },
                    "token_type": {
                        "type": "string",
                        "title": "Token Type"
                    }
                },
                "type": "object",
                "required": [
                    "access_token",
                    "token_type"
                ],
                "title": "TokenResponse"
            },
            "UserCreateRequest": {
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "password": {
                        "type": "string",
                        "minLength": 8,
                        "title": "Password",
                        "description": "Password must be at least 8 characters long"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "password"
                ],
                "title": "UserCreateRequest"
            },
            "UserLoginRequest": {
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "password": {
                        "type": "string",
                        "title": "Password"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "password"
                ],
                "title": "UserLoginRequest"
            },
            "UserResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "role": {
                        "type": "string",
                        "title": "Role"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "email",
                    "role",
                    "is_active",
                    "created_at"
                ],
                "title": "UserResponse"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            },
            "VerifyEmailRequest": {
                "properties": {
                    "user_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "User Id"
                    },
                    "verification_token": {
                        "type": "string",
                        "title": "Verification Token"
                    }
                },
                "type": "object",
                "required": [
                    "user_id",
                    "verification_token"
                ],
                "title": "VerifyEmailRequest"
            }
        },
        "securitySchemes": {
            "OAuth2PasswordBearer": {
                "type": "oauth2",
                "flows": {
                    "password": {
                        "scopes": {},
                        "tokenUrl": "auth/login"
                    }
                }
            },
            "HTTPBearer": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    }
}